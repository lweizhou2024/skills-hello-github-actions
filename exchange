% ScreenCapture_Interactive_Fixed.m
% Capture the whole screen manually (key or mouse) into MP4.
% Works reliably on all MATLAB versions.

outputFile = 'screen_capture_manual.mp4';   % Output filename
videoFrameRate = 1;                         % Playback fps

disp('Interactive screen capture started.');
disp('Press any key or click the mouse to capture a frame.');
disp('Press ESC or close the window to stop.');

% Video writer setup
v = VideoWriter(outputFile, 'MPEG-4');
v.FrameRate = videoFrameRate;
open(v);

% Screen size
set(0,'Units','pixels');
screenSize = get(0,'ScreenSize');
width  = screenSize(3);
height = screenSize(4);

% Create control figure
fig = figure('Name','Screen Capture Control', ...
    'NumberTitle','off', 'MenuBar','none', 'ToolBar','none', ...
    'Color','w', 'Position',[200 200 420 120], ...
    'KeyPressFcn',@keyCallback, ...
    'WindowButtonDownFcn',@clickCallback, ...
    'CloseRequestFcn',@closeCallback);

uicontrol('Style','text','String',...
    'Click or press any key to capture a frame. Press ESC to stop.',...
    'FontSize',11,'Units','normalized','Position',[0.05 0.3 0.9 0.4]);

robot = java.awt.Robot();
rect  = java.awt.Rectangle(width, height);
frameCount = 0;
stopCapture = false;

while ~stopCapture && ishandle(fig)
    uiwait(fig); % Wait for event
    if stopCapture || ~ishandle(fig)
        break;
    end
    
    % Capture screen
    img = robot.createScreenCapture(rect);
    w = int32(img.getWidth());
    h = int32(img.getHeight());
    rgbInts = typecast(img.getRGB(0,0,w,h,zeros(1,w*h,'int32'),0,w),'int32');
    rVals = bitand(bitshift(rgbInts, -16), 255);
    gVals = bitand(bitshift(rgbInts, -8), 255);
    bVals = bitand(rgbInts, 255);
    R = reshape(uint8(rVals), [w, h])';
    G = reshape(uint8(gVals), [w, h])';
    B = reshape(uint8(bVals), [w, h])';
    frame = cat(3, R, G, B);

    % Write video frame
    writeVideo(v, frame);
    frameCount = frameCount + 1;
    disp(['Captured frame ', num2str(frameCount)]);
end

close(v);  % Ensure video file is finalized
if ishandle(fig), delete(fig); end

pause(0.5); % Give file system a moment to flush

disp(['Done! Saved ', num2str(frameCount), ' frames to ', outputFile]);
load handel; sound(y, Fs);
msgbox(sprintf('Manual capture complete!\nFrames: %d\nFile: %s', ...
    frameCount, outputFile), 'Done');

% --- Local functions -----------------------------------------------------
function keyCallback(src, event)
    % Called when a key is pressed
    set(src,'UserData',event.Key);
    if strcmp(event.Key, 'escape')
        assignin('base','stopCapture',true);
        uiresume(src);
    else
        uiresume(src);
    end
end

function clickCallback(src, ~)
    % Called when mouse clicked
    set(src,'UserData','click');
    uiresume(src);
end

function closeCallback(src, ~)
    % Called when user closes window
    assignin('base','stopCapture',true);
    uiresume(src);
    delete(src);
end
