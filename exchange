from odbAccess import openOdb

# ===== USER INPUTS =====
odb_path = 'model.odb'      # Path to your ODB file
node_set_name = 'NSET_RF'   # Node set for total reaction force
disp_node_label = 10        # Node label for displacement output
instance_name = 'PART-1-1'  # Instance name in the ODB
# ========================

# Open ODB
odb = openOdb(path=odb_path)

# Get last step name (change if you want a specific step)
step_name = list(odb.steps.keys())[-1]
step = odb.steps[step_name]

# --- Total Reaction Force over time ---
print(f"\nTotal Reaction Force history for node set '{node_set_name}':")
# Find all nodes in the set
node_set = odb.rootAssembly.nodeSets[node_set_name]
node_labels = [n.label for n in node_set.nodes[0]]

# Loop over frames and sum RF
for frame in step.frames:
    total_rf1 = 0.0
    total_rf2 = 0.0
    rf_field = frame.fieldOutputs['RF']
    for node_label in node_labels:
        rf_val = rf_field.getSubset(region=node_set).getSubset(region=odb.rootAssembly.instances[instance_name].getNodeFromLabel(node_label)).values
        if rf_val:
            rf = rf_val[0].data
            total_rf1 += rf[0]
            total_rf2 += rf[1]
    time_val = frame.frameValue
    print(f"Time={time_val:.6f}, RF1={total_rf1:.6f}, RF2={total_rf2:.6f}")

# --- Displacement history for a specific node ---
print(f"\nDisplacement history for node {disp_node_label}:")
node_region = odb.rootAssembly.instances[instance_name].getNodeFromLabel(disp_node_label)

for frame in step.frames:
    u_field = frame.fieldOutputs['U']
    u_val = u_field.getSubset(region=node_region).values
    if u_val:
        u = u_val[0].data
        print(f"Time={frame.frameValue:.6f}, U1={u[0]:.6f}, U2={u[1]:.6f}")

odb.close()
