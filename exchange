function createPlotWithSlider()
% This function creates a plot with a panning slider that updates continuously.

% Create some sample data
x = 0:0.1:10;
y = sin(x);

% Create a figure and axes
fig = figure;
ax = axes('Parent', fig, 'Position', [0.1 0.2 0.8 0.7]); % Adjust position as needed
plot(ax, x, y);
title('Plot with X-Axis Panning Slider (Continuous Update)');

% Set initial x-axis limits
xmin_initial = min(x);
xmax_initial = max(x);
xlim(ax, [xmin_initial xmax_initial]);

% Get the initial width of the displayed x-axis
current_xlim_width = xmax_initial - xmin_initial;

% Define the full range of your data for the slider's min and max
data_min_x = min(x);
data_max_x = max(x);

% The slider's minimum value should be the absolute minimum of your data
slider_min_val = data_min_x;

% The slider's maximum value should be the point where the left edge of the
% viewable window is such that the right edge of the window aligns with data_max_x.
slider_max_val = data_max_x - current_xlim_width;

% If the initial window covers the entire data range or more,
% the slider_max_val might be less than slider_min_val.
% In such a case, adjust slider_max_val to be at least slider_min_val.
if slider_max_val < slider_min_val
    slider_max_val = slider_min_val;
end

% Set the initial value of the slider to the current xmin
slider_initial_value = xmin_initial;

% Calculate the slider step. These are normalized steps between 0 and 1.
slider_range = slider_max_val - slider_min_val;

if slider_range == 0
    minor_step = 0.1;
    major_step = 0.1;
else
    minor_step = (current_xlim_width / 100) / slider_range;
    major_step = (current_xlim_width / 10) / slider_range;

    minor_step = max(0, min(1, minor_step));
    major_step = max(0, min(1, major_step));
    if minor_step > major_step
        major_step = minor_step;
    end
    if minor_step == 0 && slider_range > 0
        minor_step = 0.001;
    end
    if major_step == 0 && slider_range > 0
        major_step = 0.01;
    end
end

% Define the position of the slider [left bottom width height]
slider_position = [0.1 0.05 0.8 0.05];

sld = uicontrol('Parent', fig, ...
    'Style', 'slider', ...
    'Units', 'normalized', ...
    'Position', slider_position, ...
    'min', slider_min_val, ...
    'max', slider_max_val, ...
    'Value', slider_initial_value, ...
    'SliderStep', [minor_step major_step]);

% --- IMPORTANT: Add a listener for continuous updates ---
% The listener needs to be tied to the object's lifecycle.
% When the slider object persists (because it's part of an open figure),
% the listener will persist.
addlistener(sld, 'Value', 'PostSet', @(es, ed) updateXlim(ax, es.Value, current_xlim_width));

% Nested function for the callback. Nested functions can access variables
% from the parent function's workspace (like 'ax' and 'current_xlim_width').
    function updateXlim(axis_handle, new_xmin_val, window_width)
        new_xmax = new_xmin_val + window_width;
        xlim(axis_handle, [new_xmin_val new_xmax]);
    end

end % End of main function
