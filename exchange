function [values, units, lineNumbers] = readEveryNthLine(filename, n)
    % Default to every 10th line if n is not specified
    if nargin < 2
        n = 10;
    end
    
    % Open the file
    fileID = fopen(filename, 'r', 'n', 'UTF-8');
    
    % Skip header
    fgetl(fileID);
    
    % Initialize variables
    values = [];
    units = {};
    lineNumbers = [];
    
    % Pattern for scientific notation with units (including degree sign)
    pattern = '(\d+,\d+(?:E[+-]?\d+)?)([^\s\d,]+)';
    
    % Process the file line by line
    lineCount = 0;
    while ~feof(fileID)
        lineCount = lineCount + 1;
        line = fgetl(fileID);
        
        % Skip if not a multiple of n
        if mod(lineCount, n) ~= 0
            continue;
        end
        
        % Process this line (every nth line)
        if ~isempty(line)
            % Find all matches in this line
            [tokens, ~] = regexp(line, pattern, 'tokens', 'match');
            
            % Process each match
            for j = 1:length(tokens)
                % Extract and convert the numeric part
                numStr = tokens{j}{1};
                value = str2double(strrep(numStr, ',', '.'));
                
                % Extract the unit
                unit = tokens{j}{2};
                
                % Add to our results
                values = [values; value];
                units{end+1,1} = unit;
                lineNumbers = [lineNumbers; lineCount];
            end
        end
        
        % Show progress for large files
        if mod(lineCount, n*1000) == 0
            fprintf('Processed up to line %d (found %d values)...\n', lineCount, length(values));
        end
    end
    
    fclose(fileID);
    
    fprintf('Complete! Extracted %d values from %d lines.\n', length(values), lineCount);
end
