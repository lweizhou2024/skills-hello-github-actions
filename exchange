% ScreenCapture_Interactive.m
% Capture full screen when user presses a key or clicks mouse.

outputFile = 'screen_capture_manual.mp4';   % output video filename
videoFrameRate = 1;                         % playback fps for output video

disp('Interactive screen capture started.');
disp('Press any key or click the mouse to capture a frame.');
disp('Press ESC or close the figure window to stop.');

% Create video writer
v = VideoWriter(outputFile, 'MPEG-4');
v.FrameRate = videoFrameRate;
open(v);

% Get screen size
set(0,'Units','pixels');
screenSize = get(0,'ScreenSize');
width = screenSize(3);
height = screenSize(4);

% Create figure to capture key/click events
fig = figure('Name','Screen Capture Control', ...
    'NumberTitle','off', 'MenuBar','none', 'ToolBar','none', ...
    'Color','w', 'Position',[100 100 400 150], ...
    'KeyPressFcn',@keyCallback, 'WindowButtonDownFcn',@clickCallback);

uicontrol('Style','text','String',...
    'Click or press any key to capture a frame. Press ESC to stop.',...
    'FontSize',11,'Units','normalized','Position',[0.05 0.3 0.9 0.4]);

% Initialize flags
stopCapture = false;
frameCount = 0;

% Java Robot for screen capture
robot = java.awt.Robot();
rect = java.awt.Rectangle(width, height);

% Nested callback functions
    function keyCallback(~, event)
        if strcmp(event.Key, 'escape')
            stopCapture = true;
            uiresume(fig);
        else
            uiresume(fig);
        end
    end

    function clickCallback(~, ~)
        uiresume(fig);
    end

% Capture loop
while ~stopCapture && ishandle(fig)
    uiwait(fig);  % wait for key or mouse
    if stopCapture || ~ishandle(fig)
        break;
    end
    
    % Capture screen
    img = robot.createScreenCapture(rect);
    w = int32(img.getWidth());
    h = int32(img.getHeight());
    rgbInts = typecast(img.getRGB(0,0,w,h,zeros(1,w*h,'int32'),0,w),'int32');
    rVals = bitand(bitshift(rgbInts, -16), 255);
    gVals = bitand(bitshift(rgbInts, -8), 255);
    bVals = bitand(rgbInts, 255);
    R = reshape(uint8(rVals), [w, h])';
    G = reshape(uint8(gVals), [w, h])';
    B = reshape(uint8(bVals), [w, h])';
    frame = cat(3, R, G, B);
    
    frameCount = frameCount + 1;
    writeVideo(v, frame);
    disp(['Captured frame ', num2str(frameCount)]);
end

close(v);
if ishandle(fig), close(fig); end

disp(['Done! Saved ', num2str(frameCount), ' frames to ', outputFile]);
load handel; sound(y, Fs);
msgbox(sprintf('Manual capture complete!\nFrames: %d\nFile: %s', ...
    frameCount, outputFile), 'Done');
